{"version":3,"sources":["./src/app/outhstrava.component.ts","./src/environments/environment.ts","./src/app/runner.detail.component.html","./src/app/runner.detail.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/strava.service.ts","./src/app/app.module.ts","./src/app/app.routing.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { StravaService } from './strava.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-outhstrava',\n  template: '',\n  styleUrls: []\n})\nexport class OuthstravaComponent implements OnInit {\n\n  emailId: string = '';\n  name: string = '';\n  runnerId: string = '';\n\n  constructor(private _activatedRoutes: ActivatedRoute, private _stravaServices: StravaService, private router: Router) { }\n\n  ngOnInit(): void {\n    this._activatedRoutes.url.subscribe((url) => {\n      this.emailId = url[1]?.path;\n    });\n    this._activatedRoutes.queryParams.subscribe((params) => {\n      this._stravaServices.client_code = params['code'];\n    });\n    if (this.emailId && this._stravaServices.client_code) {\n      this.getToken()\n    }\n  }\n\n  getToken(): void {\n    this._stravaServices.getAccessToken().subscribe((data) => {\n      this.name = data.athlete.firstname + data.athlete.lastname;\n      this._stravaServices.clientRefreshToken = data.refresh_token;\n      this.runnerId = data.athlete.id;\n      this._stravaServices.insertAccessToken(this.runnerId, this.emailId, this.name, data.refresh_token)\n        .subscribe((resp) => {\n          this.router.navigate(['/runnerDetails']);\n          // todo handle save scenario\n        })\n    })\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div class=\"container\">\n  <h1>Strava Data</h1>\n  <p>\n    <img src={{athlete?.profile}}>\n  </p>\n  <p>\n    <b>Name: </b>{{ athlete?.firstname+' '+athlete?.lastname }} <br />\n    <b>City: </b>{{athlete?.city}}<br />\n    <b>Total Ride Distance So far: </b>{{stats?.all_ride_totals.distance / 1000}} km<br />\n    <b>Total Run Distance So far: </b>{{stats?.all_run_totals.distance / 1000}} km<br />\n    <b>Total Swim Distance So far: </b>{{stats?.all_swim_totals.distance / 1000}} km\n  </p>\n\n  <hr />\n\n  <h1>Daily Activities of July Month:</h1>\n  <!-- {{activities | json}} -->\n  <table class=\"my-table\">\n    <thead class=\"my-table headers\">\n      <tr>\n        <th *ngFor=\"let column of header\">{{column}}</th>\n      </tr>\n    </thead>\n    <tbody class=\"my-table body\">\n      <tr my-active *ngFor=\"let row of activities; index as rowIndex\">\n        <td>{{rowIndex + 1}}</td>\n        <td>{{row.name}}</td>\n        <td>{{row.type}}</td>\n        <td>{{(row.distance / 1000) | number:''}} km</td>\n        <td>{{row.start_date | date:'mediumDate'}}</td>\n      </tr>\n    </tbody>\n  </table>\n\n  <!-- <h1>Stats:</h1>\n  {{stats | json}} -->\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { StravaService } from './strava.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './runner.detail.component.html',\n  styleUrls: ['./runner.detail.component.css']\n})\n\nexport class RunnerDetails implements OnInit {\n  errorMessage: string;\n  athlete: any;\n  stats: any;\n  friends: any;\n  emailId: string;\n  activities: any;\n  header: any = ['Sno', 'Activity Name', 'Activity Type', 'Distance', 'Activity Date'];\n\n  constructor(private stravaService: StravaService) {\n  }\n\n  ngOnInit() {\n    this.getAthlete();\n  }\n\n  getActivities() {\n    const before = Math.floor((new Date('2021/07/30').getTime() - new Date('2021/07/30').getMilliseconds()) / 1000);\n    const after = Math.floor((new Date('2021/07/01').getTime() - new Date('2021/07/01').getMilliseconds()) / 1000);\n    this.stravaService.before = before;\n    this.stravaService.after = after;\n    this.stravaService.getRefreshToken('activities', null).subscribe(obj => {\n      this.activities = obj;\n    })\n  }\n\n  getAthlete() {\n    this.stravaService.getRefreshToken('athlete').subscribe(obj => {\n      this.athlete = obj;\n      this.getStats(obj.id);\n    },\n      error => this.errorMessage = <any>error);\n  }\n\n  getStats(id) {\n    this.stravaService.getRefreshToken('stats', id).subscribe(obj => {\n      this.stats = this.stats = obj;\n      this.getActivities();\n    })\n  }\n\n  getFriends(id) {\n    return new Promise((resolve, reject) => {\n      this.stravaService.getFriends(id)\n        .subscribe(\n          friends => this.friends = friends,\n          error => this.errorMessage = <any>error);\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { StravaService } from './strava.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\n\nexport class AppComponent implements OnInit {\n  errorMessage: string;\n  athlete: any;\n  stats: any;\n  friends: any;\n  emailId: string;\n\n  constructor(private stravaService: StravaService, private router: Router) {\n  }\n\n  ngOnInit() {\n\n  }\n\n  checkRunnerDetail(email) {\n    this.stravaService.checkEmailFromDB(email).subscribe((data) => {\n      if (data.length === 0) {\n        window.location.href = `https://www.strava.com/oauth/authorize?client_id=24114&redirect_uri=http://localhost:4200/strava/${this.emailId}&response_type=code&scope=activity:read_all`;\n      } else {\n        this.stravaService.clientRefreshToken = data[0].token;\n        this.router.navigate(['/runnerDetails']);\n      }\n    })\n  }\n}\n","<h1>Welcome VVians...</h1>\n<b>Enter Runner Email - </b><input type=\"text\" value=\"Sydney\" [(ngModel)]=\"emailId\" />&nbsp;&nbsp;&nbsp;&nbsp;\n<button (click)=\"checkRunnerDetail(emailId)\" formtarget=\"_blank\">Get Runner's Activities</button>\n\n<router-outlet></router-outlet>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, of, BehaviorSubject } from 'rxjs';\nimport { catchError, map, mergeMap } from 'rxjs/operators';\n\n@Injectable()\nexport class StravaService {\n\n  private apiURL = '/api/v3';\n  private serverUrl = 'http://localhost:8080';\n  clientRefreshToken: string = '';\n  client_id: string = '24114';\n  client_secret: string = '704a8de089da0a0b1410b78c85185777e2a1aefd';\n  client_code: string = '';\n  restType: string = '';\n  _athlete: BehaviorSubject<any> = new BehaviorSubject({});\n  _athleteinfo$ = this._athlete.asObservable();\n  runnerId: any;\n  before: any;\n  after: any;\n\n  constructor(private http: HttpClient) { }\n\n  checkEmailFromDB(id): Observable<any> {\n    // sample DB mock data\n    return of([{ \"email\": \"jaganviky@gmail.com\", \"token\": \"dfb8b058532d8463ea4352f478c6d60057a48bb4\", \"name\": \"jagan_raj\", \"runTotal\": \"0\", \"cycleTotal\": \"0\", \"swimTotal\": \"0\", \"othersTotal\": \"0\", \"runnerId\": \"22865789\" }]);\n    // return this.http.get(`${this.serverUrl}/getByEmail/${id}`)\n    //   .pipe(map(this.extractData), catchError(this.handleError));\n  }\n\n  getAccessToken(): Observable<any> {\n    let url = `${this.apiURL}/oauth/token?client_id=${this.client_id}&client_secret=${this.client_secret}&code=${this.client_code}&grant_type=authorization_code`;\n    return this.http.post(url, {})\n      .pipe(map(this.extractData), catchError(this.handleError))\n  }\n\n  getRefreshToken(type?, id?: number): Observable<any> {\n    this.restType = type ? type : '';\n    this.runnerId = id ? id : '';\n    let url = `${this.apiURL}/oauth/token?client_id=${this.client_id}&client_secret=${this.client_secret}&refresh_token=${this.clientRefreshToken}&grant_type=refresh_token`;\n    return this.http.post(url, {})\n      .pipe(mergeMap((resp: any) => {\n        this._athlete.next(resp.athlete);\n        if (this.restType === 'activities') {\n          return this.getActivities(resp.access_token);\n        } else if (this.restType === 'athlete') {\n          return this.getAthlete(resp.access_token);\n        } else if (this.restType === 'stats') {\n          return this.getStats(this.runnerId, resp.access_token);\n        } else {\n          return of(resp);\n        }\n      }), catchError(this.handleError))\n  }\n\n  insertAccessToken(rid, email, name, token): Observable<any> {\n    let obj = {};\n    obj['email'] = email;\n    obj['id'] = rid;\n    obj['name'] = name;\n    obj['token'] = token;\n    return this.http.post(`${this.serverUrl}/insertAccessToken`, obj).pipe(map(this.extractData), catchError(this.handleError));\n  }\n\n  createAuthorizationHeader(token: string) {\n    return new HttpHeaders({ 'Authorization': `Bearer ${token}`, 'Access-Control-Allow-Origin': '*', 'content-type': 'application/json' });\n  }\n\n\n  getAthlete(token: string): Observable<any> {\n    let url = `${this.apiURL}/athlete/`;\n    return this.http.get(url, { 'headers': this.createAuthorizationHeader(token) })\n      .pipe(map(this.extractData), catchError(this.handleError))\n  }\n\n  getActivities(accesToken: string, id?: number): Observable<any> {\n    let url = `${this.apiURL}/activities?access_token=${accesToken}&before=${this.before}&after=${this.after}`;\n    return this.http.get(url, {})\n      .pipe(map(this.extractData, this.restType), catchError(this.handleError))\n  }\n\n\n  getStats(id: number, token?: string): Observable<any> {\n    let url = `${this.apiURL}/athletes/${id}/stats`;\n    return this.http.get(url, { 'headers': this.createAuthorizationHeader(token) })\n      .pipe(map(this.extractData), catchError(this.handleError))\n  }\n\n  getFriends(id: number, token?: string): Observable<any> {\n    let url = `${this.apiURL}/athletes/${id}/friends`;\n    return this.http.get(url, { 'headers': this.createAuthorizationHeader(token) })\n      .pipe(map(this.extractData), catchError(this.handleError))\n  }\n\n  private extractData(res: any) {\n    if (this.restType === 'activities') {\n      this.getActivities(res.access_token)\n    } else {\n      return res || {};\n    }\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    let errMsg: string;\n\n    if (error instanceof HttpErrorResponse) {\n      errMsg = `${error.status} - ${error.statusText || ''} ${error.message}`;\n    } else {\n      errMsg = error;\n    }\n\n    console.error(errMsg);\n    return Observable.throw(errMsg);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { StravaService } from './strava.service';\nimport { AppComponent } from './app.component';\nimport { RunnerDetails } from './runner.detail.component';\nimport { AppRoutingModule } from './app.routing';\nimport { OuthstravaComponent } from './outhstrava.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RunnerDetails,\n    OuthstravaComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    AppRoutingModule\n  ],\n  providers: [StravaService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { OuthstravaComponent } from './outhstrava.component';\nimport { RunnerDetails } from './runner.detail.component';\n\nexport const routes: Routes = [\n  { path: 'home', component: AppComponent },\n  { path: 'strava', component: OuthstravaComponent },\n  {path: 'runnerDetails', component: RunnerDetails},\n  { path: '**', component: OuthstravaComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}